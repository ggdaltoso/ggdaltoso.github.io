---
import type { BlogPost } from '../types/index';

export interface Props {
  posts: BlogPost[];
}

const { posts } = Astro.props;

const formatDate = (date: Date) => {
  return new Date(date).toLocaleString('en-US', {
    month: 'long',
    year: 'numeric',
  });
};
---

<ul class="content">
  {
    posts.map((post) => {
      if (!post) return null;

      return (
        <li class="post">
          <p class="meta">
            <span class="date">{formatDate(post.date)}</span>
            <span class="category">{post.category.toUpperCase()}</span>
          </p>
          <a href={`/post${post.slug}`} target="_blank" class="post-link">
            <h4 class="title">{post.title}</h4>
          </a>
          <p class="description">{post.description}</p>
          <a href={`/post${post.slug}`} target="_blank" class="read-link">
            Read
          </a>
        </li>
      );
    })
  }
</ul>

<style>
  .content {
    list-style: none;
    padding: 0;
    margin: 0;
    padding-left: 2rem;
  }

  .post {
    margin-bottom: 2rem;
    padding-bottom: 1rem;
  }

  .post-link {
    color: unset;
  }

  .meta {
    font-size: 0.875rem;
    color: rgb(var(--gray-dark));
    margin-bottom: 0.5rem;
  }

  .meta .date {
    font-weight: bold;
  }

  .meta .category {
    margin-left: 0.5rem;
    color: var(--accent);
    text-transform: uppercase;
  }

  .title {
    font-size: 1.25rem;
    margin: 0.5rem 0;
    color: rgb(var(--text-dark));
  }

  .description {
    font-size: 1rem;
    color: rgb(var(--text-light));
    margin: 0.5rem 0;
  }

  .read-link {
    font-size: 0.875rem;
    color: var(--accent);
    text-decoration: none;
    font-weight: bold;
    opacity: 0.7;
    transition: opacity 0.2s ease;
  }

  .read-link:hover {
    opacity: 1;
    text-decoration: underline;
  }

  @media (max-width: 768px) {
    .content {
      padding-left: 0;
    }

    .post {
      margin-bottom: 2.5rem;
    }
  }
</style>
